(()=>{"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._alternative=e.alternative,this._templateSelector=t,this._handleCardClick=s}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".places__place").cloneNode(!0)}_toggleLike(e){e.target.classList.toggle("places__heart_active")}_deleteCard(e){e.remove()}_setEventListeners(){this._element.querySelector(".places__heart").addEventListener("click",this._toggleLike),this._element.querySelector(".places__delete-icon").addEventListener("click",(()=>{this._deleteCard(this._element)})),this._cardImage.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}generateCard(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".places__image"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._alternative,this._element.querySelector(".places__depiction").textContent=this._name,this._element}}class t{constructor(e,t){this._config=e,this._form=t,this._inputList=Array.from(this._form.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._form.querySelector(this._config.submitButtonSelector)}_hideInputError(e){this._errorElement=this._form.querySelector(`.${e.id}-error`),e.classList.remove(this._config.inputErrorClass),this._errorElement.classList.remove(this._config.errorClass),this._errorElement.textContent=""}_showInputError(e){this._errorElement=this._form.querySelector(`.${e.id}-error`),e.classList.add(this._config.inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._config.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_disableSubmitButton(){this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0}_enableSubmitButton(){this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._setEventListeners()}}class s{constructor(e){this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popup.addEventListener("mousedown",(e=>{e.target.classList.contains("popup_opened")&&this.close(),e.target.classList.contains("popup__close-button")&&this.close()}))}}class n extends s{constructor(e,t){super(e),this._handlerFormSubmit=t,this._popupForm=this._popup.querySelector(".popup__form"),this._inputList=this._popupForm.querySelectorAll(".popup__input")}close(){super.close(),this._popupForm.reset()}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}_getInputValues(){return this._formData={},this._inputList.forEach((e=>{this._formData[e.name]=e.value})),this._formData}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handlerFormSubmit(this._getInputValues()),this.close()}))}}const r=document.querySelector(".places"),o=document.querySelector(".profile__edit-button"),i=(document.querySelector("#popup__profile-setting").querySelector("#profile-setting_close-button"),document.querySelector(".popup__input_name"),document.querySelector(".profile__name")),a=(document.querySelector(".popup__input_description"),document.querySelector(".profile__description")),u=document.querySelector(".profile__image"),p=document.querySelector(".profile__add-button");document.querySelector("#popup__cards-setting").querySelector("#cards-setting_close-button"),document.querySelector(".popup__input_title"),document.querySelector(".popup__input_url"),document.querySelector(".popup-image");const l=new class{constructor(e){this.url=e.url,this.headers=e.headers}_handleResponseStatus(e){return e.ok?e.json():Promise.reject(`Произошла ошибка: ${e.status}`)}getUserInformation(){return fetch(`${this.url}/users/me`,{method:"GET",headers:{authorization:this.headers,"Content-Type":"application/json"}}).then((e=>this._handleResponseStatus(e)))}getInitialCards(){return fetch(`${this.url}/cards`,{method:"GET",headers:{authorization:this.headers,"Content-Type":"application/json"}}).then((e=>this._handleResponseStatus(e)))}updateUserInformation(e){return fetch(`${this.url}/users/me`,{method:"PATCH",headers:{authorization:this.headers,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.about})}).then((e=>this._handleResponseStatus(e)))}handleAddCard(e){return fetch(`${this.url}/cards`,{method:"POST",headers:{authorization:this.headers,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then((e=>this._handleResponseStatus(e)))}}({url:"https://mesto.nomoreparties.co/v1/cohort-60",headers:"50c7d53e-b526-44ca-b3ac-53bfa1ff2f46"}),c={};function _(t){return new e(t,"#template-place",h).generateCard()}function h(e,t){m.open({name:e,link:t})}var d;d={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},Array.from(document.querySelectorAll(d.formSelector)).forEach((e=>{const s=new t(d,e),n=e.getAttribute("name");c[n]=s,s.enableValidation()}));const m=new class extends s{constructor(e){super(e),this._popupImage=this._popup.querySelector(".popup-image__image"),this._captionPopupImage=this._popup.querySelector(".popup-image__caption")}open(e){super.open(),this._captionPopupImage.textContent=e.name,this._popupImage.src=e.link,this._popupImage.alt=`Изображение ${e.name}`}}(".popup-image");m.setEventListeners();const f=new class{constructor(e,t){this._container=t,this._renderer=e}renderItems(e){e.forEach((e=>{this._renderer(e,this._container)}))}renderItem(e){console.log(e),this._renderer(e,this._container)}}((function(e,t){t.prepend(e)}),r);l.getInitialCards().then((e=>{const t=e.map((e=>_(e)));f.renderItems(t)})),l.getUserInformation().then((e=>{S.setUserInfo(e)})).catch((e=>console.log(e)));const g=new n("#popup__cards-setting",(function(e){console.log(e),l.handleAddCard(e).then((e=>{f.renderItem(_(e))}))}));g.setEventListeners();const S=new class{constructor(e,t,s){this._name=e,this._description=t,this._avatarInput=s}getUserInfo(){return this._userInfo={},this._userInfo.name=this._name.textContent,this._userInfo.about=this._description.textContent,this._userInfo}setUserInfo(e){this._name.textContent=e.name,this._description.textContent=e.about,this._avatarInput.src=e.avatar}setUserAvatar(e){this._avatarInput.src=e.avatarImput}}(i,a,u),v=new n("#popup__profile-setting",(function(e){console.log(e),l.updateUserInformation(e).then((e=>{S.setUserInfo(e)})).catch((e=>console.log(e)))}));v.setEventListeners(),o.addEventListener("click",(function(){v.open(),v.setInputValues(S.getUserInfo()),c["profile-setup-form"].resetValidation()})),p.addEventListener("click",(function(){g.open(),c["cards-setting-form"].resetValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ekYsT0FDcEJ5RixFQUFvQjVFLGVBQWU4QixFQUFTeUMsZUFDNUNsQyxFQUFlLHNCQUFzQnZELGlCQUN2QyxJQUVBOEIsRUFBZXBFLGlCQUFpQixTQUFTLFdBRXZDeUgsRUFBVTlFLE9BQ1ZrRCxFQUFlLHNCQUFzQnZELGlCQUN2QyxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoZGF0YSwgdGVtcGxhdGVTZWxlY3RvciwgaGFuZGxlQ2FyZENsaWNrKSB7XG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX2FsdGVybmF0aXZlID0gZGF0YS5hbHRlcm5hdGl2ZTtcbiAgICB0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yID0gdGVtcGxhdGVTZWxlY3RvcjtcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gIH1cblxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fdGVtcGxhdGVTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VzX19wbGFjZVwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcbiAgfVxuXG4gIF90b2dnbGVMaWtlKGV2dCkge1xuICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LnRvZ2dsZShcInBsYWNlc19faGVhcnRfYWN0aXZlXCIpO1xuICB9XG5cbiAgX2RlbGV0ZUNhcmQoZWxlbWVudCkge1xuICAgIGVsZW1lbnQucmVtb3ZlKCk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fZWxlbWVudCAvLyDQodGC0LDQstC40Lwg0LvQsNC50LpcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlc19faGVhcnRcIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5fdG9nZ2xlTGlrZSk7XG5cbiAgICB0aGlzLl9lbGVtZW50IC8vINCj0LTQsNC70Y/QtdC8INC60LDRgNGC0L7Rh9C60YNcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlc19fZGVsZXRlLWljb25cIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9kZWxldGVDYXJkKHRoaXMuX2VsZW1lbnQpO1xuICAgICAgfSk7XG5cbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl9uYW1lLCB0aGlzLl9saW5rKTtcbiAgICB9KTtcbiAgfVxuXG4gIGdlbmVyYXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VzX19pbWFnZVwiKTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9hbHRlcm5hdGl2ZTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VzX19kZXBpY3Rpb25cIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cbn1cblxuZXhwb3J0IHsgQ2FyZCB9O1xuIiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZywgZm9ybSkge1xuICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLl9mb3JtID0gZm9ybTtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2NvbmZpZy5pbnB1dFNlbGVjdG9yKSAvL9Cf0L7Qu9GD0YfQsNC10Lwg0LjQvdC/0YPRgtGLXG4gICAgKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKFxuICAgICAgdGhpcy5fY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yXG4gICAgKTtcbiAgfVxuXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuaW5wdXRFcnJvckNsYXNzKTtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuZXJyb3JDbGFzcyk7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgfVxuXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuaW5wdXRFcnJvckNsYXNzKTtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmVycm9yQ2xhc3MpO1xuICB9XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcbiAgICBpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWRcbiAgICAgID8gdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KVxuICAgICAgOiB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICB9XG5cbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCk7XG4gIH1cblxuICBfZGlzYWJsZVN1Ym1pdEJ1dHRvbigpIHtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpOyAvLyDQotC40L8g0LrQvdC+0L/QutC4KNGB0L7RhdGA0LDQvdC40Y8g0L/QvtC/0LDQv9CwKSDQstGL0LrQu9GO0YfQtdC90L3QsFxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xuICB9XG5cbiAgX2VuYWJsZVN1Ym1pdEJ1dHRvbigpIHtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcbiAgICB0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKVxuICAgICAgPyB0aGlzLl9kaXNhYmxlU3VibWl0QnV0dG9uKClcbiAgICAgIDogdGhpcy5fZW5hYmxlU3VibWl0QnV0dG9uKCk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICByZXNldFZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH0pO1xuICB9XG5cbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG5cbmV4cG9ydCB7IEZvcm1WYWxpZGF0b3IgfTtcbiIsImNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcbiAgfVxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7IC8vINC+0YLQutGA0YvRgtGMINC/0L7Qv9Cw0L9cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfb3BlbmVkXCIpOyAvLyDQl9Cw0LrRgNGL0YLRjCDQv9C+0L/QsNC/XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGV2dCkgPT4ge1xuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9O1xuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGV2dCkgPT4ge1xuICAgICAgaWYgKGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBfb3BlbmVkXCIpKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX19jbG9zZS1idXR0b25cIikpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5leHBvcnQgeyBQb3B1cCB9O1xuIiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5jbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVyRm9ybVN1Ym1pdCkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZXJGb3JtU3VibWl0ID0gaGFuZGxlckZvcm1TdWJtaXQ7XG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5wb3B1cF9faW5wdXRcIik7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xuICB9XG5cbiAgc2V0SW5wdXRWYWx1ZXMoZGF0YSkge1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgLy8g0YLRg9GCINCy0YHRgtCw0LLQu9GP0LXQvCDQsiBgdmFsdWVgINC40L3Qv9GD0YLQsCDQtNCw0L3QvdGL0LUg0LjQtyDQvtCx0YrQtdC60YLQsCDQv9C+INCw0YLRgNC40LHRg9GC0YMgYG5hbWVgINGN0YLQvtCz0L4g0LjQvdC/0YPRgtCwXG4gICAgICBpbnB1dC52YWx1ZSA9IGRhdGFbaW5wdXQubmFtZV07XG4gICAgfSk7XG4gIH1cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgdGhpcy5fZm9ybURhdGEgPSB7fTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIHRoaXMuX2Zvcm1EYXRhW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXMuX2Zvcm1EYXRhO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZlbnQpID0+IHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9oYW5kbGVyRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgeyBQb3B1cFdpdGhGb3JtIH07XG4iLCJjb25zdCB2YWxpZGF0aW9uQ29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX2J1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwX19idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwicG9wdXBfX2Vycm9yX3Zpc2libGVcIixcbn07XG5cbi8qINCh0JXQmtCm0JjQryDQotCV0JzQn9Cb0JXQmdCiICjQmtCQ0KDQotCe0KfQmtCYKSAqL1xuY29uc3QgcGxhY2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZXNcIik7IC8vINCx0LvQvtC6INCyIGh0bWwg0LTQu9GPINC60LDRgNGC0L7Rh9C60LhcblxuLyog0J/QntCf0JDQnyDQoNCV0JTQkNCa0KLQmNCg0J7QktCQ0J3QmNCVINCf0KDQntCk0JjQm9CvICovXG5jb25zdCBwcm9maWxlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0LWJ1dHRvblwiKTsgLy8g0LrQvdC+0L/QutCwINGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40LUg0L/RgNC+0YTQuNC70YHRj1xuY29uc3QgcG9wdXBQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwb3B1cF9fcHJvZmlsZS1zZXR0aW5nXCIpOyAvLyDRgdC10LrRhtC40Y8g0L/QvtC/0LDQv1xuY29uc3QgY2xvc2VCdXR0b25Qb3B1cFByb2ZpbGUgPSBwb3B1cFByb2ZpbGUucXVlcnlTZWxlY3RvcihcbiAgXCIjcHJvZmlsZS1zZXR0aW5nX2Nsb3NlLWJ1dHRvblwiXG4pOyAvLyDQutC90L7Qv9C60LAg0LfQsNC60YDRi9GC0LjRjyDQv9C+0L/QsNC/XG4vL2NvbnN0IGZvcm1FbFByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtc2V0dGluZ19fZm9ybVwiKTsgLy/RhNC+0YDQvNCwINC40L3Qv9GD0YLQvtCyXG5jb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF9uYW1lXCIpOyAvLyDQuNC90L/Rg9GCINGBINC40LzQtdC90LXQvFxuY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX25hbWVcIik7IC8vINC40LzRjyDQv9GA0L7RhNC40LvRj1xuY29uc3QgZGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0X2Rlc2NyaXB0aW9uXCIpOyAvLyDQuNC90L/Rg9GCINGBINC+0L/QuNGB0LDQvdC40LXQvFxuY29uc3QgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIpOyAvLyDQvtC/0LjRgdCw0L3QuNC1INC/0YDQvtGE0LjQu9GB0Y9cbmNvbnN0IGF2YXRhckltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbWFnZVwiKTtcbi8qINCg0JXQlNCQ0JrQotCY0KDQntCS0JDQndCY0JUg0J/QoNCe0KTQmNCb0K8gKi9cblxuLyog0J/QntCf0JDQnyDQlNCe0JHQkNCS0JvQldCd0JjQryDQmtCQ0KDQotCe0KfQmtCYICovXG5jb25zdCBjYXJkc0FkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTsgLy8g0LrQvdC+0L/QutCwINGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40LUg0LrQsNGA0YLQvtGH0LXQulxuY29uc3QgcG9wdXBDYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcG9wdXBfX2NhcmRzLXNldHRpbmdcIik7IC8vINGB0LXQutGG0LjRjyDQv9C+0L/QsNC/INGBINC60LDRgNGC0L7Rh9C60LDQvNC4XG5jb25zdCBjbG9zZUJ1dHRvbkNhcmRzID0gcG9wdXBDYXJkcy5xdWVyeVNlbGVjdG9yKFxuICBcIiNjYXJkcy1zZXR0aW5nX2Nsb3NlLWJ1dHRvblwiXG4pOyAvLyDQutC90L7Qv9C60LAg0LfQsNC60YDRi9GC0LjRjyDQv9C+0L/QsNC/XG4vL2NvbnN0IGZvcm1FbENhcmRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkcy1zZXR0aW5nX19mb3JtXCIpOyAvL9GE0L7RgNC80LAg0LjQvdC/0YPRgtC+0LJcbmNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF90aXRsZVwiKTsgLy8g0LjQvdC/0YPRgiDRgSDQvdCw0LfQstCw0L3QuNC10LxcbmNvbnN0IHVybElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW5wdXRfdXJsXCIpOyAvLyDQuNC90L/Rg9GCINGBINGB0YHRi9C70LrQvtC5XG4vKiDQn9Ce0J/QkNCfINCU0J7QkdCQ0JLQm9CV0J3QmNCvINCa0JDQoNCi0J7Qp9Ca0JggKi9cblxuY29uc3QgYXBpQ29uZmlnID0ge1xuICB1cmw6IFwiaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC02MFwiLFxuICBoZWFkZXJzOiBcIjUwYzdkNTNlLWI1MjYtNDRjYS1iM2FjLTUzYmZhMWZmMmY0NlwiLFxufTtcblxuLyog0J/QntCf0JDQnyDQn9Cg0J7QodCc0J7QotCg0JAg0JrQkNCg0KLQntCn0JrQmCAqL1xuY29uc3QgcG9wdXBJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXAtaW1hZ2VcIik7IC8vINC/0L7Qv9Cw0L8g0YEg0LrQsNGA0YLQuNC90LrQvtC5XG5cbmV4cG9ydCB7XG4gIHZhbGlkYXRpb25Db25maWcsXG4gIHBsYWNlcyxcbiAgcHJvZmlsZUJ1dHRvbixcbiAgcG9wdXBQcm9maWxlLFxuICBuYW1lSW5wdXQsXG4gIHByb2ZpbGVOYW1lLFxuICBkZXNjcmlwdGlvbklucHV0LFxuICBkZXNjcmlwdGlvbixcbiAgY2FyZHNBZGRCdXR0b24sXG4gIHBvcHVwQ2FyZHMsXG4gIHRpdGxlSW5wdXQsXG4gIHVybElucHV0LFxuICBwb3B1cEltYWdlLFxuICBjbG9zZUJ1dHRvblBvcHVwUHJvZmlsZSxcbiAgY2xvc2VCdXR0b25DYXJkcyxcbiAgYXBpQ29uZmlnLFxuICBhdmF0YXJJbWFnZSxcbn07XG4iLCJpbXBvcnQgeyBDYXJkIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCB7IFNlY3Rpb24gfSBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgeyBQb3B1cFdpdGhJbWFnZSB9IGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XG5pbXBvcnQgeyBQb3B1cFdpdGhGb3JtIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xuaW1wb3J0IHsgVXNlckluZm8gfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IHtcbiAgdmFsaWRhdGlvbkNvbmZpZyxcbiAgcGxhY2VzLFxuICBwcm9maWxlQnV0dG9uLFxuICBuYW1lSW5wdXQsXG4gIHByb2ZpbGVOYW1lLFxuICBkZXNjcmlwdGlvbklucHV0LFxuICBkZXNjcmlwdGlvbixcbiAgY2FyZHNBZGRCdXR0b24sXG4gIHRpdGxlSW5wdXQsXG4gIHVybElucHV0LFxuICBhcGlDb25maWcsXG4gIGF2YXRhckltYWdlLFxufSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcblxuLy8g0JrQu9Cw0YHRgSBBcGlcbmNvbnN0IGFwaSA9IG5ldyBBcGkoYXBpQ29uZmlnKTtcblxuLy8g0KTQvtGA0LzRiyDQstCw0LvQuNC00LDRhtC40LhcblxuY29uc3QgZm9ybVZhbGlkYXRvcnMgPSB7fTtcblxuLy8g0YHQvtC30LTQsNGR0Lwg0LrQsNGA0YLQvtGH0LrRg1xuZnVuY3Rpb24gY3JlYXRlQ2FyZChvYmplY3QpIHtcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKG9iamVjdCwgXCIjdGVtcGxhdGUtcGxhY2VcIiwgaGFuZGxlQ2FyZENsaWNrKTtcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xuICByZXR1cm4gY2FyZEVsZW1lbnQ7XG59XG5cbi8vINC+0YLQutGA0YvRgtGMINC/0L7Qv9Cw0L8g0YEg0LrQsNGA0YLQuNC90LrQvtC5XG5cbmZ1bmN0aW9uIGhhbmRsZUNhcmRDbGljayhuYW1lLCBsaW5rKSB7XG4gIHBvcHVwV2l0aEltYWdlLm9wZW4oeyBuYW1lLCBsaW5rIH0pO1xufVxuXG4vLyDQktC60LvRjtGH0LXQvdC40LUg0LLQsNC70LjQtNCw0YbQuNC4XG5jb25zdCBlbmFibGVWYWxpZGF0aW9uID0gKGNvbmZpZykgPT4ge1xuICBjb25zdCBmb3JtTGlzdCA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChjb25maWcuZm9ybVNlbGVjdG9yKSk7XG4gIGZvcm1MaXN0LmZvckVhY2goKGZvcm1FbGVtZW50KSA9PiB7XG4gICAgY29uc3QgdmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBmb3JtRWxlbWVudCk7XG4gICAgY29uc3QgZm9ybU5hbWUgPSBmb3JtRWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpO1xuICAgIGZvcm1WYWxpZGF0b3JzW2Zvcm1OYW1lXSA9IHZhbGlkYXRvcjtcbiAgICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuICB9KTtcbn07XG5lbmFibGVWYWxpZGF0aW9uKHZhbGlkYXRpb25Db25maWcpO1xuXG4vLyDQmtC70LDRgdGBIHBvcHVwV2l0aEltYWdlICA9PlxuY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIucG9wdXAtaW1hZ2VcIik7XG5wb3B1cFdpdGhJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xuXG4vL9GE0YPQvdC60YbQuNGPINC00LvRjyBTZWN0aW9uXG5mdW5jdGlvbiByZW5kZXJlcihlbGVtZW50LCBjb250YWluZXIpIHtcbiAgY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XG59XG5cbi8vINCa0LvQsNGB0YEgU2VjdGlvbiAgPT5cblxuY29uc3Qgc2VjdGlvbiA9IG5ldyBTZWN0aW9uKHJlbmRlcmVyLCBwbGFjZXMpO1xuXG5hcGkuZ2V0SW5pdGlhbENhcmRzKCkudGhlbigob2JqZWN0KSA9PiB7XG4gIGNvbnN0IGRlZmF1bHRDYXJkTGlzdCA9IG9iamVjdC5tYXAoKGRhdGEpID0+IHtcbiAgICByZXR1cm4gY3JlYXRlQ2FyZChkYXRhKTtcbiAgfSk7XG4gIHNlY3Rpb24ucmVuZGVySXRlbXMoZGVmYXVsdENhcmRMaXN0KTtcbn0pO1xuXG4vL9C00LDQvdC90YvQtSDQv9GA0L7RhNC40LvRjyDQvdCwINGB0LXRgNCy0LXRgFxuYXBpXG4gIC5nZXRVc2VySW5mb3JtYXRpb24oKVxuICAudGhlbigoSW5mbykgPT4ge1xuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKEluZm8pO1xuICB9KVxuICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XG5cbi8vINCa0LvQsNGB0YEg0L/QvtC/0LDQvyDQutCw0YDRgtC+0YfQutC4ID0+XG5cbmZ1bmN0aW9uIGhhbmRsZUNhbGxiYWNrQ2FyZChjYXJkKSB7XG4gIGNvbnNvbGUubG9nKGNhcmQpO1xuICBhcGkuaGFuZGxlQWRkQ2FyZChjYXJkKS50aGVuKChkYXRhKSA9PiB7XG4gICAgc2VjdGlvbi5yZW5kZXJJdGVtKGNyZWF0ZUNhcmQoZGF0YSkpO1xuICB9KTtcbn1cblxuY29uc3QgcG9wdXBDYXJkID0gbmV3IFBvcHVwV2l0aEZvcm0oXG4gIFwiI3BvcHVwX19jYXJkcy1zZXR0aW5nXCIsXG4gIGhhbmRsZUNhbGxiYWNrQ2FyZFxuKTtcblxucG9wdXBDYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuLy8g0JrQu9Cw0YHRgSDQv9C+0L/QsNC/INC/0YDQvtGE0LjQu9GPLCDRjtC30LXRgNCwID0+XG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhwcm9maWxlTmFtZSwgZGVzY3JpcHRpb24sIGF2YXRhckltYWdlKTtcblxuZnVuY3Rpb24gaGFuZGxlQ2FsbGJhY2xQcm9maWxlKG9iamVjdCkge1xuICBjb25zb2xlLmxvZyhvYmplY3QpO1xuICBhcGlcbiAgICAudXBkYXRlVXNlckluZm9ybWF0aW9uKG9iamVjdClcbiAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oZGF0YSk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XG59XG5cbi8qINC60LvQsNGB0YEg0L/QvtC/0LDQvyDQv9GA0L7RhNC40LvRjyAqL1xuY29uc3QgcG9wdXBQcm9maWxlU2V0dGluZyA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICBcIiNwb3B1cF9fcHJvZmlsZS1zZXR0aW5nXCIsXG4gIGhhbmRsZUNhbGxiYWNsUHJvZmlsZVxuKTtcbnBvcHVwUHJvZmlsZVNldHRpbmcuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxucHJvZmlsZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAvLyDQvtGC0LrRgNGL0YLQuNC1INC/0L7Qv9Cw0L/QsCDQv9C+INC90LDQttCw0YLQuNGOINC90LAg0LrQvdC+0L/QutGDINC/0YDQvtGE0LjQu9GPXG4gIHBvcHVwUHJvZmlsZVNldHRpbmcub3BlbigpO1xuICBwb3B1cFByb2ZpbGVTZXR0aW5nLnNldElucHV0VmFsdWVzKHVzZXJJbmZvLmdldFVzZXJJbmZvKCkpO1xuICBmb3JtVmFsaWRhdG9yc1tcInByb2ZpbGUtc2V0dXAtZm9ybVwiXS5yZXNldFZhbGlkYXRpb24oKTtcbn0pO1xuXG5jYXJkc0FkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAvL9C+0YLQutGA0YvRgtC40LUg0L/QvtC/0LDQv9CwINC/0L4g0L3QsNC20LDRgtC40Y4g0L3QsCDQutC90L7Qv9C60YMg0LTQvtCx0LDQstC70LXQvdC40LUg0LrQsNGA0YLQvtGH0LrQuFxuICBwb3B1cENhcmQub3BlbigpO1xuICBmb3JtVmFsaWRhdG9yc1tcImNhcmRzLXNldHRpbmctZm9ybVwiXS5yZXNldFZhbGlkYXRpb24oKTtcbn0pO1xuXG4vKlxuXG5jb25zdCBwb3B1cENhcmQgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNwb3B1cF9fY2FyZHMtc2V0dGluZ1wiLCAob2JqZWN0KSA9PiB7XG4gIGRlZmF1bHRDYXJkTGlzdC5hZGRJdGVtKGNyZWF0ZUNhcmQob2JqZWN0KSk7XG59KTtcbnBvcHVwQ2FyZC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbmFwaS51cGRhdGVVc2VySW5mb3JtYXRpb24ob2JqZWN0KVxuICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcblxuXG5cblxuXG5hcGkudXBkYXRlVXNlckluZm9ybWF0aW9uKCkudGhlbigoaW5mbykgPT4ge1xuICBjb25zb2xlLmxvZyhpbmZvKVxufSkgIFxuXG5yZXR1cm4gZmV0Y2goXCJodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTYwL2NhcmRzXCIsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogXCI1MGM3ZDUzZS1iNTI2LTQ0Y2EtYjNhYy01M2JmYTFmZjJmNDZcIixcblxuY29uc3QgcG9wdXBQcm9maWxlU2V0dGluZyA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICBcIiNwb3B1cF9fcHJvZmlsZS1zZXR0aW5nXCIsXG4gIChvYmplY3QpID0+IHtcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyhvYmplY3QpO1xuICB9XG4pO1xuXG4qL1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgYXBpIHtcclxuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcclxuICAgIHRoaXMudXJsID0gY29uZmlnLnVybDtcclxuICAgIHRoaXMuaGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZVJlc3BvbnNlU3RhdHVzKHJlcykge1xyXG4gICAgcmV0dXJuIHJlcy5va1xyXG4gICAgICA/IHJlcy5qc29uKClcclxuICAgICAgOiBQcm9taXNlLnJlamVjdChg0J/RgNC+0LjQt9C+0YjQu9CwINC+0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm9ybWF0aW9uKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5oZWFkZXJzLFxyXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICB9LFxyXG4gICAgfSkudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9oYW5kbGVSZXNwb25zZVN0YXR1cyhyZXMpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy51cmx9L2NhcmRzYCwge1xyXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgIH0sXHJcbiAgICB9KS50aGVuKChyZXMpID0+IHtcclxuICAgICAgcmV0dXJuIHRoaXMuX2hhbmRsZVJlc3BvbnNlU3RhdHVzKHJlcyk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZVVzZXJJbmZvcm1hdGlvbih1c2VySW5mbykge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiB1c2VySW5mby5uYW1lLFxyXG4gICAgICAgIGFib3V0OiB1c2VySW5mby5hYm91dCxcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKChyZXMpID0+IHtcclxuICAgICAgcmV0dXJuIHRoaXMuX2hhbmRsZVJlc3BvbnNlU3RhdHVzKHJlcyk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGhhbmRsZUFkZENhcmQoY2FyZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuaGVhZGVycyxcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IGNhcmQubmFtZSxcclxuICAgICAgICBsaW5rOiBjYXJkLmxpbmssXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9oYW5kbGVSZXNwb25zZVN0YXR1cyhyZXMpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiBcclxuXHJcblxyXG5cclxucmV0dXJuIGZldGNoKGAke3RoaXMudXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVEhcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuaGVhZGVycyxcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IFwiTWFyaWUgU2vFgm9kb3dza2EgQ3VyaWVcIixcclxuICAgICAgICBhYm91dDogXCJQaHlzaWNpc3QgYW5kIENoZW1pc3RcIixcclxuICAgICAgfSksXHJcbiAgICB9KVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KFxyXG4gICAgICBuZXcgRXJyb3IoYNCf0YDQvtC40LfQvtGI0LvQsCDQvtGI0LjQsdC60LA6ICR7cmVzLnN0YXR1c31gKVxyXG5cclxuXHJcbiovXHJcbiIsImltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9wb3B1cEltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cC1pbWFnZV9faW1hZ2VcIik7IC8v0LrQsNGA0YLQuNC90LrQsCDQv9C+0L/QsNC/0LBcbiAgICB0aGlzLl9jYXB0aW9uUG9wdXBJbWFnZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAvLyDQntC/0LjRgdCw0L3QuNC1INC60LDRgNGC0LjQvdC60LhcbiAgICAgIFwiLnBvcHVwLWltYWdlX19jYXB0aW9uXCJcbiAgICApO1xuICB9XG5cbiAgb3BlbihpbWFnZSkge1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgICB0aGlzLl9jYXB0aW9uUG9wdXBJbWFnZS50ZXh0Q29udGVudCA9IGltYWdlLm5hbWU7XG4gICAgdGhpcy5fcG9wdXBJbWFnZS5zcmMgPSBpbWFnZS5saW5rO1xuICAgIHRoaXMuX3BvcHVwSW1hZ2UuYWx0ID0gYNCY0LfQvtCx0YDQsNC20LXQvdC40LUgJHtpbWFnZS5uYW1lfWA7XG4gIH1cbn1cblxuZXhwb3J0IHsgUG9wdXBXaXRoSW1hZ2UgfTtcbiIsImNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3RvcihyZW5kZXJlciwgY29udGFpbmVyKSB7XG4gICAgdGhpcy5fY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG4gIH1cblxuICByZW5kZXJJdGVtcyhvYmplY3QpIHtcbiAgICBvYmplY3QuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgdGhpcy5fcmVuZGVyZXIoZWxlbWVudCwgdGhpcy5fY29udGFpbmVyKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlckl0ZW0oZWxlbWVudCkge1xuICAgIGNvbnNvbGUubG9nKGVsZW1lbnQpXG4gICAgdGhpcy5fcmVuZGVyZXIoZWxlbWVudCwgdGhpcy5fY29udGFpbmVyKTtcbiAgfVxufVxuXG5leHBvcnQgeyBTZWN0aW9uIH07XG4iLCJjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKG5hbWVJbnB1dCwgZGVzY3JpcHRpb25JbnB1dCwgYXZhdGFySW5wdXQpIHtcbiAgICB0aGlzLl9uYW1lID0gbmFtZUlucHV0O1xuICAgIHRoaXMuX2Rlc2NyaXB0aW9uID0gZGVzY3JpcHRpb25JbnB1dDtcbiAgICB0aGlzLl9hdmF0YXJJbnB1dCA9IGF2YXRhcklucHV0O1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgdGhpcy5fdXNlckluZm8gPSB7fTtcbiAgICB0aGlzLl91c2VySW5mby5uYW1lID0gdGhpcy5fbmFtZS50ZXh0Q29udGVudDtcbiAgICB0aGlzLl91c2VySW5mby5hYm91dCA9IHRoaXMuX2Rlc2NyaXB0aW9uLnRleHRDb250ZW50O1xuICAgIHJldHVybiB0aGlzLl91c2VySW5mbztcbiAgfVxuXG4gIHNldFVzZXJJbmZvKGRhdGEpIHtcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2Rlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gZGF0YS5hYm91dDtcbiAgICB0aGlzLl9hdmF0YXJJbnB1dC5zcmMgPSBkYXRhLmF2YXRhcjtcbiAgfVxuXG4gIHNldFVzZXJBdmF0YXIob2JqZWN0KSB7XG4gICAgdGhpcy5fYXZhdGFySW5wdXQuc3JjID0gb2JqZWN0LmF2YXRhckltcHV0O1xuICB9XG59XG5leHBvcnQgeyBVc2VySW5mbyB9O1xuIl0sIm5hbWVzIjpbIkNhcmQiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9hbHRlcm5hdGl2ZSIsImFsdGVybmF0aXZlIiwiX3RlbXBsYXRlU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2dldFRlbXBsYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl90b2dnbGVMaWtlIiwiZXZ0IiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiX2RlbGV0ZUNhcmQiLCJlbGVtZW50IiwicmVtb3ZlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX2VsZW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiX2NhcmRJbWFnZSIsImdlbmVyYXRlQ2FyZCIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwiRm9ybVZhbGlkYXRvciIsImNvbmZpZyIsImZvcm0iLCJfY29uZmlnIiwiX2Zvcm0iLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0U2VsZWN0b3IiLCJfYnV0dG9uRWxlbWVudCIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2hpZGVJbnB1dEVycm9yIiwiaW5wdXRFbGVtZW50IiwiX2Vycm9yRWxlbWVudCIsImlkIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9zaG93SW5wdXRFcnJvciIsImFkZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGFzSW52YWxpZElucHV0Iiwic29tZSIsIl9kaXNhYmxlU3VibWl0QnV0dG9uIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImRpc2FibGVkIiwiX2VuYWJsZVN1Ym1pdEJ1dHRvbiIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJyZXNldFZhbGlkYXRpb24iLCJlbmFibGVWYWxpZGF0aW9uIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwIiwib3BlbiIsIl9oYW5kbGVFc2NDbG9zZSIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImtleSIsInNldEV2ZW50TGlzdGVuZXJzIiwiY29udGFpbnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlckZvcm1TdWJtaXQiLCJzdXBlciIsIl9oYW5kbGVyRm9ybVN1Ym1pdCIsIl9wb3B1cEZvcm0iLCJyZXNldCIsInNldElucHV0VmFsdWVzIiwiaW5wdXQiLCJ2YWx1ZSIsIl9nZXRJbnB1dFZhbHVlcyIsIl9mb3JtRGF0YSIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJwbGFjZXMiLCJwcm9maWxlQnV0dG9uIiwicHJvZmlsZU5hbWUiLCJkZXNjcmlwdGlvbiIsImF2YXRhckltYWdlIiwiY2FyZHNBZGRCdXR0b24iLCJhcGkiLCJ1cmwiLCJoZWFkZXJzIiwiX2hhbmRsZVJlc3BvbnNlU3RhdHVzIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImdldFVzZXJJbmZvcm1hdGlvbiIsImZldGNoIiwibWV0aG9kIiwiYXV0aG9yaXphdGlvbiIsInRoZW4iLCJnZXRJbml0aWFsQ2FyZHMiLCJ1cGRhdGVVc2VySW5mb3JtYXRpb24iLCJ1c2VySW5mbyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYWJvdXQiLCJoYW5kbGVBZGRDYXJkIiwiY2FyZCIsImZvcm1WYWxpZGF0b3JzIiwiY3JlYXRlQ2FyZCIsIm9iamVjdCIsInBvcHVwV2l0aEltYWdlIiwiZm9ybVNlbGVjdG9yIiwiZm9ybUVsZW1lbnQiLCJ2YWxpZGF0b3IiLCJmb3JtTmFtZSIsImdldEF0dHJpYnV0ZSIsIl9wb3B1cEltYWdlIiwiX2NhcHRpb25Qb3B1cEltYWdlIiwiaW1hZ2UiLCJzZWN0aW9uIiwicmVuZGVyZXIiLCJjb250YWluZXIiLCJfY29udGFpbmVyIiwiX3JlbmRlcmVyIiwicmVuZGVySXRlbXMiLCJyZW5kZXJJdGVtIiwiY29uc29sZSIsImxvZyIsInByZXBlbmQiLCJkZWZhdWx0Q2FyZExpc3QiLCJtYXAiLCJJbmZvIiwic2V0VXNlckluZm8iLCJjYXRjaCIsImVyciIsInBvcHVwQ2FyZCIsIm5hbWVJbnB1dCIsImRlc2NyaXB0aW9uSW5wdXQiLCJhdmF0YXJJbnB1dCIsIl9kZXNjcmlwdGlvbiIsIl9hdmF0YXJJbnB1dCIsImdldFVzZXJJbmZvIiwiX3VzZXJJbmZvIiwiYXZhdGFyIiwic2V0VXNlckF2YXRhciIsImF2YXRhckltcHV0IiwicG9wdXBQcm9maWxlU2V0dGluZyJdLCJzb3VyY2VSb290IjoiIn0=