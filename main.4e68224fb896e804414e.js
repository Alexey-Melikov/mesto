(()=>{"use strict";class t{constructor(t,e,s,n,i,o){this._name=t.name,this._link=t.link,this._likes=t.likes,this._alternative=t.alternative,this._templateSelectors=e,this._handleCardClick=s,this._owner=t.owner._id,this._clientId=n,this._cardId=t._id,this._handleCallbackDeleteCardOpenPopup=i,this._handleCardLike=o}_getTemplate(t){return document.querySelector(t).content.querySelector(".places__place").cloneNode(!0)}generateCard(){return this._element=this._clientId===this._owner?this._getTemplate(this._templateSelectors.owner):this._getTemplate(this._templateSelectors.anoser),this._deleteIcon=this._element.querySelector(".places__delete-icon"),this._cardImage=this._element.querySelector(".places__image"),this._cardImage.src=this._link,this._cardImage.alt=this._alternative,this._element.querySelector(".places__depiction").textContent=this._name,this._likeCalculator=this._element.querySelector(".places__like-calculator"),this._likeCalculator.textContent=this._likes.length,this._likes.find((t=>t._id===this._clientId))&&this._element.querySelector(".places__heart").classList.add("places__heart_active"),this._setEventListeners(),this._element}_setEventListeners(){this._element.querySelector(".places__heart").addEventListener("click",(()=>{this._handleCardLike(this._likeCalculator,this._element,this._cardId)})),this._deleteIcon&&this._deleteIcon.addEventListener("click",(()=>{this._handleCallbackDeleteCardOpenPopup(this._cardId,this._element)})),this._cardImage.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}}class e{constructor(t,e){this._config=t,this._form=e,this._inputList=Array.from(this._form.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._form.querySelector(this._config.submitButtonSelector)}_hideInputError(t){this._errorElement=this._form.querySelector(`.${t.id}-error`),t.classList.remove(this._config.inputErrorClass),this._errorElement.classList.remove(this._config.errorClass),this._errorElement.textContent=""}_showInputError(t){this._errorElement=this._form.querySelector(`.${t.id}-error`),t.classList.add(this._config.inputErrorClass),this._errorElement.textContent=t.validationMessage,this._errorElement.classList.add(this._config.errorClass)}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}_disableSubmitButton(){this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0}_enableSubmitButton(){this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}_setEventListeners(){this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}enableValidation(){this._setEventListeners()}}class s{constructor(t){this._popup=document.querySelector(t)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=t=>{"Escape"===t.key&&this.close()};setEventListeners(){this._popup.addEventListener("mousedown",(t=>{t.target.classList.contains("popup_opened")&&this.close(),t.target.classList.contains("popup__close-button")&&this.close()}))}}class n extends s{constructor(t,e){super(t),this._handlerFormSubmit=e,this._popupForm=this._popup.querySelector(".popup__form"),this._inputList=this._popupForm.querySelectorAll(".popup__input"),this._loadingButton=this._popup.querySelector(".popup__button"),this._initialButtonTextContent=this._loadingButton.textContent}close(){super.close(),this._popupForm.reset()}loadingProc(t){this._loadingButton.textContent=t?"Сохранение...":this._initialButtonTextContent}setInputValues(t){this._inputList.forEach((e=>{e.value=t[e.name]}))}_getInputValues(){return this._formData={},this._inputList.forEach((t=>{this._formData[t.name]=t.value})),this._formData}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(t=>{t.preventDefault(),this._handlerFormSubmit(this._getInputValues())}))}}const i=document.querySelector(".places"),o={owner:"#template-place-owner",anoser:"#template-place"},r=document.querySelector(".profile__edit-button"),a=(document.querySelector("#popup__profile-setting").querySelector("#profile-setting_close-button"),document.querySelector(".profile__avatar-button")),l=(document.querySelector(".popup__input_name"),document.querySelector(".profile__name")),c=(document.querySelector(".popup__input_description"),document.querySelector(".profile__description")),h=document.querySelector(".profile__image"),u=document.querySelector(".profile__add-button"),p=(document.querySelector("#popup__cards-setting").querySelector("#cards-setting_close-button"),document.querySelector(".popup__input_title"),document.querySelector(".popup__input_url"),document.querySelector(".popup-image"),new class{constructor(t){this.url=t.url,this.headers=t.headers}_handleResponseStatus(t){return t.ok?t.json():Promise.reject(`Произошла ошибка: ${t.status}`)}getUserInformation(){return fetch(`${this.url}/users/me`,{method:"GET",headers:{authorization:this.headers,"Content-Type":"application/json"}}).then((t=>this._handleResponseStatus(t)))}getInitialCards(){return fetch(`${this.url}/cards`,{method:"GET",headers:{authorization:this.headers,"Content-Type":"application/json"}}).then((t=>this._handleResponseStatus(t)))}updateUserInformation(t){return fetch(`${this.url}/users/me`,{method:"PATCH",headers:{authorization:this.headers,"Content-Type":"application/json"},body:JSON.stringify({name:t.name,about:t.about})}).then((t=>this._handleResponseStatus(t)))}handleAddCard(t){return fetch(`${this.url}/cards`,{method:"POST",headers:{authorization:this.headers,"Content-Type":"application/json"},body:JSON.stringify({name:t.name,link:t.link})}).then((t=>this._handleResponseStatus(t)))}handleDeleteCard(t){return fetch(`${this.url}/cards/${t}`,{method:"DELETE",headers:{authorization:this.headers,"Content-Type":"application/json"}}).then((t=>this._handleResponseStatus(t)))}handleLikeCard(t){return fetch(`${this.url}/cards/likes/${t}`,{method:"PUT",headers:{authorization:this.headers,"Content-Type":"application/json"}}).then((t=>this._handleResponseStatus(t)))}handleDisLikeCard(t){return fetch(`${this.url}/cards/likes/${t}`,{method:"DELETE",headers:{authorization:this.headers,"Content-Type":"application/json"}}).then((t=>this._handleResponseStatus(t)))}userAvatarUpdate(t){return fetch(`${this.url}/users/me/avatar`,{method:"PATCH",headers:{authorization:this.headers,"Content-Type":"application/json"},body:JSON.stringify({avatar:t.avatarImput})}).then((t=>this._handleResponseStatus(t)))}}({url:"https://mesto.nomoreparties.co/v1/cohort-60",headers:"50c7d53e-b526-44ca-b3ac-53bfa1ff2f46"})),_={},d=new class{constructor(t,e,s){this._name=t,this._description=e,this._avatarInput=s}getUserInfo(){return this._userInfo={},this._userInfo.name=this._name.textContent,this._userInfo.about=this._description.textContent,this._userInfo}setUserInfo(t){t.name&&(this._name.textContent=t.name),t.about&&(this._description.textContent=t.about),t.avatar&&(this._avatarInput.src=t.avatar)}setUserAvatar(t){t.avatar&&(this._avatarInput.src=t.avatar)}}(l,c,h);function m(t,e){L.open({name:t,link:e})}function f(t,e){I.open(t,e)}function g(t,e,s){const n=e.querySelector(".places__heart");n.classList.contains("places__heart_active")?p.handleDisLikeCard(s).then((e=>{t.textContent=`${e.likes.length}`,n.classList.remove("places__heart_active")})).catch((t=>console.log(t))):p.handleLikeCard(s).then((e=>{t.textContent=`${e.likes.length}`,n.classList.add("places__heart_active")})).catch((t=>console.log(t)))}function v(e,s){return new t(e,o,m,s,f,g).generateCard()}Promise.all([p.getUserInformation(),p.getInitialCards()]).then((t=>{const e=t[0],s=t[1];d.setUserInfo(e),h.src=e.avatar,d.id=e._id;const n=s.map((t=>v(t,d.id)));E.renderItems(n)})).catch((t=>console.log(t)));const S=new n("#update-avatar",(function(t){S.loadingProc(!0),p.userAvatarUpdate(t).then((t=>{d.setUserAvatar(t)})).catch((t=>console.log(t))).finally((()=>{S.loadingProc(!1),S.close()}))})),y=new n("#popup__profile-setting",(function(t){y.loadingProc(!0),p.updateUserInformation(t).then((t=>{d.setUserInfo(t)})).catch((t=>console.log(t))).finally((()=>{y.loadingProc(!1),y.close()}))})),C=new n("#popup__cards-setting",(function(t){C.loadingProc(!0),p.handleAddCard(t).then((t=>E.renderItem(v(t,d.id)))).catch((t=>console.log(t))).finally((()=>{C.loadingProc(!1),C.close()}))})),E=new class{constructor(t,e){this._container=e,this._renderer=t}renderItems(t){t.reverse().forEach((t=>{this._renderer(t,this._container)}))}renderItem(t){this._renderer(t,this._container)}}((function(t,e){e.prepend(t)}),i),I=new class extends s{constructor(t,e){super(t),this._handlerFormSubmit=e,this._popupForm=this._popup.querySelector(".popup__form"),this._loadingButton=this._popup.querySelector(".popup__button"),this._initialButtonTextContent=this._loadingButton.textContent}loadingProc(t){this._loadingButton.textContent=t?"Сохранение...":this._initialButtonTextContent}open(t,e){this._card=e,this._cardId=t,super.open()}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(t=>{t.preventDefault(),this._handlerFormSubmit(this._cardId,this._card)}))}}("#delete-card",(function(t,e){I.loadingProc(!0),p.handleDeleteCard(t).then((()=>{e.remove()})).catch((t=>console.log(t))).finally((()=>{I.loadingProc(!1),I.close()}))})),L=new class extends s{constructor(t){super(t),this._popupImage=this._popup.querySelector(".popup-image__image"),this._captionPopupImage=this._popup.querySelector(".popup-image__caption")}open(t){super.open(),this._captionPopupImage.textContent=t.name,this._popupImage.src=t.link,this._popupImage.alt=`Изображение ${t.name}`}}(".popup-image");var b;a.addEventListener("click",(function(){S.open(),_["update-avatar-form"].resetValidation()})),r.addEventListener("click",(function(){y.open(),y.setInputValues(d.getUserInfo()),_["profile-setup-form"].resetValidation()})),u.addEventListener("click",(function(){C.open(),_["cards-setting-form"].resetValidation()})),b={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},Array.from(document.querySelectorAll(b.formSelector)).forEach((t=>{const s=new e(b,t),n=t.getAttribute("name");_[n]=s,s.enableValidation()})),S.setEventListeners(),y.setEventListeners(),C.setEventListeners(),I.setEventListeners(),L.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,